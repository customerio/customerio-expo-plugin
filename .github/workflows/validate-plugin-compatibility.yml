name: Validate Plugin Compatibility

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main, beta, feature/*]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "20"
  JAVA_VERSION: "17"
  XCODE_VERSION: "15.3"
  APP_DIR: ci-test-apps
  APP_NAME_PREFIX: ExpoPluginTestApp

jobs:
  validate:
    name: Expo ${{ matrix.expo-version }} - ${{ matrix.platform }}${{ matrix.ios-push-provider && format(' ({0})', matrix.ios-push-provider) }}
    runs-on: macos-14

    strategy:
      fail-fast: false
      matrix:
        include:
          - expo-version: 51
            platform: android
          - expo-version: 51
            platform: ios
            ios-push-provider: apn
            ios-deployment-target: "15.1"
          - expo-version: 51
            platform: ios
            ios-push-provider: fcm
            ios-deployment-target: "15.1"

          - expo-version: 52
            platform: android
          - expo-version: 52
            platform: ios
            ios-push-provider: apn
          - expo-version: 52
            platform: ios
            ios-push-provider: fcm

          # Running on latest version helps to catch issues early for new versions not listed above
          - expo-version: latest
            platform: android
          - expo-version: latest
            platform: ios
            ios-push-provider: apn
          - expo-version: latest
            platform: ios
            ios-push-provider: fcm

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Set APP_NAME and APP_PATH
        run: |
          echo "APP_NAME=${{ env.APP_NAME_PREFIX }}_${{ matrix.expo-version }}" >> $GITHUB_ENV
          echo "APP_PATH=${{ env.APP_DIR }}/${{ env.APP_NAME_PREFIX }}_${{ matrix.expo-version }}" >> $GITHUB_ENV

      - name: Create Test App
        run: |
          npm run compatibility:create-test-app -- \
            --expo-version=${{ matrix.expo-version }} \
            --app-name=${{ env.APP_NAME }} \
            --dir-name=${{ env.APP_DIR }}

      - name: Setup Test App
        run: |
          npm run compatibility:setup-test-app -- \
            --app-path=${{ env.APP_PATH }}

      - name: Configure Plugin with Default Config
        run: |
          npm run compatibility:configure-plugin -- \
            --app-path=${{ env.APP_PATH }} \
            --add-default-config \
            ${{ matrix.ios-deployment-target && format('--expo-build-props.ios.deploymentTarget={0}', matrix.ios-deployment-target) }}

      - name: Validate Plugin
        run: |
          npm run compatibility:validate-plugin -- \
            --app-path=${{ env.APP_PATH }} \
            --platforms=${{ matrix.platform }}\
            --ios-use-frameworks="static" \
            ${{ matrix.ios-push-provider && format(' --ios-push-providers={0}', matrix.ios-push-provider) }}
