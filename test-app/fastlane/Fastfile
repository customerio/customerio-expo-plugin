# There are some re-usable functions in other Fastfile files in the org we can re-use. 
import_from_git(
  url: "https://github.com/customerio/customerio-ios.git", 
  branch: "main", 
  path: "Apps/fastlane/Fastfile"
)

platform :android do
  lane :build do |values|
    app_package_name = CredentialsManager::AppfileConfig.try_fetch_value(:package_name)
    firebase_app_id = find_firebase_app_id(app_identifier: app_package_name)

    android_set_version_name(
      version_name: get_new_app_version(),
      gradle_file: "./android/app/build.gradle"
    )
    android_set_version_code(
      version_code: get_new_build_version(),
      gradle_file: "./android/app/build.gradle"
    )

    # Build release APK using Fastlane's Gradle tool
    gradle(
      project_dir: "./android",
      task: "assemble",
      build_type: "Release"
    )

    # Path to the APK generated by gradle (relative to project root)
    distribution_apk_path = "android/app/build/outputs/apk/release/app-release.apk"

    # Adjusted path for checking the APK from the Fastlane directory
    relative_apk_path = "../#{distribution_apk_path}"

    UI.message("Current working directory: #{Dir.pwd}, Looking for APK at: #{relative_apk_path}")
    # Check if the APK exists
    unless File.exist?(relative_apk_path)
      UI.user_error!("Couldn't find the APK at #{relative_apk_path}")
    end

    # function 'setup_google_bucket_access' is a re-usable function inside of apple-code-signing Fastfile that we imported.
    # This allows you to create a temporary file from a GitHub secret for added convenience.
    # When uploading the build to Firebase App Distribution, the CI server needs to authenticate with Firebase. This is done with a
    # Google Cloud Service Account json creds file. The base64 encoded value of this service account file is stored as this secret.
    service_credentials_file_path = setup_google_bucket_access(
      environment_variable_key: "FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_CREDS_B64"
    )

    firebase_app_distribution(
      apk_path: distribution_apk_path,
      app: firebase_app_id,
      service_credentials_file: service_credentials_file_path,
      groups: get_build_test_groups(),
      release_notes: get_build_notes()
    )
  end
end
